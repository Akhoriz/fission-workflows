syntax = "proto3";

import "github.com/fission/fission-workflow/pkg/types/types.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

service Scheduler {


    rpc evaluate (ScheduleRequest) returns (Schedule) {}
}

message Schedule {
    string invocationId = 1;
    google.protobuf.Timestamp createdAt = 2;
    repeated Action actions = 3;
    // TODo Expected next evaluation
}

enum ActionType {
    INVOKE_TASK = 0;
    ABORT = 1;
    // Controller decides if workflow is completed (success or failure)
}

message Action {
    ActionType type = 1;
    google.protobuf.Any payload = 4;
}

message AbortAction {
    string reason = 1;
}

message InvokeTaskAction {
    // Id of the task in the workflow
    string id = 1;
    // TODO uint32 priority = 4; // Compared to others
    // TODO google.protobuf.Timestamp startAfter = 3; // Needed?
    // TODO map<string,string> env = 5;
    // TODO placement constraints / function scheduler instructions
    // TODO communication / routing
}

message ScheduleRequest {
    Workflow workflow = 1;
    WorkflowInvocationContainer invocation = 2; // TODO with spec and status
}
