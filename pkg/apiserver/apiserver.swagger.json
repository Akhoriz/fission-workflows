{
  "swagger": "2.0",
  "info": {
    "title": "pkg/apiserver/apiserver.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/function": {
      "post": {
        "summary": "Debug purposes",
        "operationId": "Invoke",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FunctionInvocation"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FunctionInvocationSpec"
            }
          }
        ],
        "tags": [
          "FunctionEnvApi"
        ]
      }
    },
    "/invocation": {
      "get": {
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiserverWorkflowInvocationList"
            }
          }
        },
        "tags": [
          "WorkflowInvocationAPI"
        ]
      },
      "post": {
        "summary": "Create a new workflow invocation",
        "description": "In case the invocation specification is missing fields or contains invalid fields, a HTTP 400 is returned.",
        "operationId": "Invoke",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiserverWorkflowInvocationIdentifier"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowInvocationSpec"
            }
          }
        ],
        "tags": [
          "WorkflowInvocationAPI"
        ]
      }
    },
    "/invocation/{id}": {
      "get": {
        "summary": "Get the specification and status of a workflow invocation",
        "description": "Get returns three different aspects of the workflow invocation, namely the spec (specification), status and logs.\nTo lighten the request load, consider using a more specific request.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowInvocationContainer"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowInvocationAPI"
        ]
      },
      "delete": {
        "summary": "Cancel a workflow invocation",
        "description": "This action is irreverisble. A canceled invocation cannot be resumed or restarted.\nIn case that an invocation already is canceled, has failed or has completed, nothing happens.\nIn case that an invocation does not exist a HTTP 404 error status is returned.",
        "operationId": "Cancel",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowInvocationAPI"
        ]
      }
    },
    "/status": {
      "get": {
        "operationId": "Status",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiserverHealth"
            }
          }
        },
        "tags": [
          "AdminAPI"
        ]
      }
    },
    "/workflow": {
      "get": {
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiserverSearchWorkflowResponse"
            }
          }
        },
        "tags": [
          "WorkflowAPI"
        ]
      },
      "post": {
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiserverWorkflowIdentifier"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowSpec"
            }
          }
        ],
        "tags": [
          "WorkflowAPI"
        ]
      }
    },
    "/workflow/{id}": {
      "get": {
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowAPI"
        ]
      }
    }
  },
  "definitions": {
    "FunctionInvocation": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMetadata"
        },
        "spec": {
          "$ref": "#/definitions/FunctionInvocationSpec"
        },
        "status": {
          "$ref": "#/definitions/FunctionInvocationStatus"
        }
      },
      "title": "Function Invocation Model"
    },
    "FunctionInvocationSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "FunctionInvocationStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/FunctionInvocationStatusStatus"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FunctionInvocationStatusStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SCHEDULED",
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED",
        "ABORTED",
        "SKIPPED"
      ],
      "default": "UNKNOWN"
    },
    "ObjectMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "string namespace = 2;\n   string name = 3;"
        }
      },
      "title": "Common"
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMetadata"
        },
        "spec": {
          "$ref": "#/definitions/WorkflowSpec"
        }
      },
      "title": "Workflow Model"
    },
    "WorkflowInvocationContainer": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMetadata"
        },
        "spec": {
          "$ref": "#/definitions/WorkflowInvocationSpec"
        },
        "status": {
          "$ref": "#/definitions/WorkflowInvocationStatus"
        }
      }
    },
    "WorkflowInvocationSpec": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      },
      "title": "Workflow Invocation Model"
    },
    "WorkflowInvocationStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowInvocationStatusStatus"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WorkflowInvocationStatusStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SCHEDULED",
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED",
        "ABORTED"
      ],
      "default": "UNKNOWN"
    },
    "WorkflowSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "apiserverHealth": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "apiserverSearchWorkflowResponse": {
      "type": "object",
      "properties": {
        "workflows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiserverWorkflowIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "apiserverWorkflowInvocationIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "apiserverWorkflowInvocationList": {
      "type": "object",
      "properties": {
        "invocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
