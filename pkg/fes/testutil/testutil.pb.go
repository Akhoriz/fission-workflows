// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/fes/testutil/testutil.proto

package testutil

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DummyEvent is a stub implementation of a fes.Event
type DummyEvent struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DummyEvent) Reset()         { *m = DummyEvent{} }
func (m *DummyEvent) String() string { return proto.CompactTextString(m) }
func (*DummyEvent) ProtoMessage()    {}
func (*DummyEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_76504a7188a9cca3, []int{0}
}

func (m *DummyEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DummyEvent.Unmarshal(m, b)
}
func (m *DummyEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DummyEvent.Marshal(b, m, deterministic)
}
func (m *DummyEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DummyEvent.Merge(m, src)
}
func (m *DummyEvent) XXX_Size() int {
	return xxx_messageInfo_DummyEvent.Size(m)
}
func (m *DummyEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DummyEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DummyEvent proto.InternalMessageInfo

func (m *DummyEvent) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*DummyEvent)(nil), "fission.workflows.eventstore.testutil.DummyEvent")
}

func init() { proto.RegisterFile("pkg/fes/testutil/testutil.proto", fileDescriptor_76504a7188a9cca3) }

var fileDescriptor_76504a7188a9cca3 = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0xc8, 0x4e, 0xd7,
	0x4f, 0x4b, 0x2d, 0xd6, 0x2f, 0x49, 0x2d, 0x2e, 0x29, 0x2d, 0xc9, 0xcc, 0x81, 0x33, 0xf4, 0x0a,
	0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x54, 0xd3, 0x32, 0x8b, 0x8b, 0x33, 0xf3, 0xf3, 0xf4, 0xca, 0xf3,
	0x8b, 0xb2, 0xd3, 0x72, 0xf2, 0xcb, 0x8b, 0xf5, 0x52, 0xcb, 0x52, 0xf3, 0x4a, 0x8a, 0x4b, 0xf2,
	0x8b, 0x52, 0xf5, 0x60, 0x8a, 0x95, 0xe4, 0xb8, 0xb8, 0x5c, 0x4a, 0x73, 0x73, 0x2b, 0x5d, 0x41,
	0x72, 0x42, 0x02, 0x5c, 0xcc, 0xb9, 0xc5, 0xe9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20,
	0xa6, 0x13, 0x57, 0x14, 0x07, 0x4c, 0x6d, 0x12, 0x1b, 0xd8, 0x64, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc6, 0x83, 0xde, 0x8d, 0x7c, 0x00, 0x00, 0x00,
}
