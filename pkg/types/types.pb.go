// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/types/types.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	pkg/types/types.proto

It has these top-level messages:
	ObjectMetadata
	Workflow
	FunctionInvocation
	FunctionInvocationSpec
	FunctionInvocationStatus
	WorkflowInvocationSpec
	WorkflowInvocationStatus
	WorkflowInvocation
	WorkflowSpec
	Task
	TaskDependencyParameters
	WorkflowStatus
	TaskTypeDef
	TypedValue
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FunctionInvocationStatus_Status int32

const (
	FunctionInvocationStatus_UNKNOWN     FunctionInvocationStatus_Status = 0
	FunctionInvocationStatus_SCHEDULED   FunctionInvocationStatus_Status = 1
	FunctionInvocationStatus_IN_PROGRESS FunctionInvocationStatus_Status = 2
	FunctionInvocationStatus_SUCCEEDED   FunctionInvocationStatus_Status = 3
	FunctionInvocationStatus_FAILED      FunctionInvocationStatus_Status = 4
	FunctionInvocationStatus_ABORTED     FunctionInvocationStatus_Status = 5
	FunctionInvocationStatus_SKIPPED     FunctionInvocationStatus_Status = 6
)

var FunctionInvocationStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "SCHEDULED",
	2: "IN_PROGRESS",
	3: "SUCCEEDED",
	4: "FAILED",
	5: "ABORTED",
	6: "SKIPPED",
}
var FunctionInvocationStatus_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"SCHEDULED":   1,
	"IN_PROGRESS": 2,
	"SUCCEEDED":   3,
	"FAILED":      4,
	"ABORTED":     5,
	"SKIPPED":     6,
}

func (x FunctionInvocationStatus_Status) String() string {
	return proto.EnumName(FunctionInvocationStatus_Status_name, int32(x))
}
func (FunctionInvocationStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

type WorkflowInvocationStatus_Status int32

const (
	WorkflowInvocationStatus_UNKNOWN     WorkflowInvocationStatus_Status = 0
	WorkflowInvocationStatus_SCHEDULED   WorkflowInvocationStatus_Status = 1
	WorkflowInvocationStatus_IN_PROGRESS WorkflowInvocationStatus_Status = 2
	WorkflowInvocationStatus_SUCCEEDED   WorkflowInvocationStatus_Status = 3
	WorkflowInvocationStatus_FAILED      WorkflowInvocationStatus_Status = 4
	WorkflowInvocationStatus_ABORTED     WorkflowInvocationStatus_Status = 5
)

var WorkflowInvocationStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "SCHEDULED",
	2: "IN_PROGRESS",
	3: "SUCCEEDED",
	4: "FAILED",
	5: "ABORTED",
}
var WorkflowInvocationStatus_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"SCHEDULED":   1,
	"IN_PROGRESS": 2,
	"SUCCEEDED":   3,
	"FAILED":      4,
	"ABORTED":     5,
}

func (x WorkflowInvocationStatus_Status) String() string {
	return proto.EnumName(WorkflowInvocationStatus_Status_name, int32(x))
}
func (WorkflowInvocationStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

type TaskDependencyParameters_DependencyType int32

const (
	TaskDependencyParameters_DATA    TaskDependencyParameters_DependencyType = 0
	TaskDependencyParameters_CONTROL TaskDependencyParameters_DependencyType = 1
)

var TaskDependencyParameters_DependencyType_name = map[int32]string{
	0: "DATA",
	1: "CONTROL",
}
var TaskDependencyParameters_DependencyType_value = map[string]int32{
	"DATA":    0,
	"CONTROL": 1,
}

func (x TaskDependencyParameters_DependencyType) String() string {
	return proto.EnumName(TaskDependencyParameters_DependencyType_name, int32(x))
}
func (TaskDependencyParameters_DependencyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

type WorkflowStatus_Status int32

const (
	WorkflowStatus_UNKNOWN WorkflowStatus_Status = 0
	WorkflowStatus_PARSING WorkflowStatus_Status = 1
	WorkflowStatus_READY   WorkflowStatus_Status = 2
	WorkflowStatus_FAILED  WorkflowStatus_Status = 3
	WorkflowStatus_DELETED WorkflowStatus_Status = 4
)

var WorkflowStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "PARSING",
	2: "READY",
	3: "FAILED",
	4: "DELETED",
}
var WorkflowStatus_Status_value = map[string]int32{
	"UNKNOWN": 0,
	"PARSING": 1,
	"READY":   2,
	"FAILED":  3,
	"DELETED": 4,
}

func (x WorkflowStatus_Status) String() string {
	return proto.EnumName(WorkflowStatus_Status_name, int32(x))
}
func (WorkflowStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

// Common
type ObjectMetadata struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	//    string namespace = 2;
	//    string name = 3;
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (m *ObjectMetadata) Reset()                    { *m = ObjectMetadata{} }
func (m *ObjectMetadata) String() string            { return proto.CompactTextString(m) }
func (*ObjectMetadata) ProtoMessage()               {}
func (*ObjectMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ObjectMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjectMetadata) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// Workflow Model
type Workflow struct {
	Metadata *ObjectMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *WorkflowSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *WorkflowStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *Workflow) Reset()                    { *m = Workflow{} }
func (m *Workflow) String() string            { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()               {}
func (*Workflow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Workflow) GetMetadata() *ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Workflow) GetSpec() *WorkflowSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Workflow) GetStatus() *WorkflowStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// Function Invocation Model
type FunctionInvocation struct {
	Metadata *ObjectMetadata           `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *FunctionInvocationSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *FunctionInvocationStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *FunctionInvocation) Reset()                    { *m = FunctionInvocation{} }
func (m *FunctionInvocation) String() string            { return proto.CompactTextString(m) }
func (*FunctionInvocation) ProtoMessage()               {}
func (*FunctionInvocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FunctionInvocation) GetMetadata() *ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FunctionInvocation) GetSpec() *FunctionInvocationSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *FunctionInvocation) GetStatus() *FunctionInvocationStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type FunctionInvocationSpec struct {
	// Id of the function to be invoked (no ambiguatity at this point
	Type   *TaskTypeDef           `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	TaskId string                 `protobuf:"bytes,2,opt,name=taskId" json:"taskId,omitempty"`
	Inputs map[string]*TypedValue `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FunctionInvocationSpec) Reset()                    { *m = FunctionInvocationSpec{} }
func (m *FunctionInvocationSpec) String() string            { return proto.CompactTextString(m) }
func (*FunctionInvocationSpec) ProtoMessage()               {}
func (*FunctionInvocationSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FunctionInvocationSpec) GetType() *TaskTypeDef {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FunctionInvocationSpec) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *FunctionInvocationSpec) GetInputs() map[string]*TypedValue {
	if m != nil {
		return m.Inputs
	}
	return nil
}

type FunctionInvocationStatus struct {
	Status    FunctionInvocationStatus_Status `protobuf:"varint,1,opt,name=status,enum=FunctionInvocationStatus_Status" json:"status,omitempty"`
	UpdatedAt *google_protobuf.Timestamp      `protobuf:"bytes,2,opt,name=updatedAt" json:"updatedAt,omitempty"`
	Output    *TypedValue                     `protobuf:"bytes,3,opt,name=output" json:"output,omitempty"`
}

func (m *FunctionInvocationStatus) Reset()                    { *m = FunctionInvocationStatus{} }
func (m *FunctionInvocationStatus) String() string            { return proto.CompactTextString(m) }
func (*FunctionInvocationStatus) ProtoMessage()               {}
func (*FunctionInvocationStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FunctionInvocationStatus) GetStatus() FunctionInvocationStatus_Status {
	if m != nil {
		return m.Status
	}
	return FunctionInvocationStatus_UNKNOWN
}

func (m *FunctionInvocationStatus) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *FunctionInvocationStatus) GetOutput() *TypedValue {
	if m != nil {
		return m.Output
	}
	return nil
}

// Workflow Invocation Model
type WorkflowInvocationSpec struct {
	WorkflowId string                 `protobuf:"bytes,1,opt,name=workflowId" json:"workflowId,omitempty"`
	Input      map[string]*TypedValue `protobuf:"bytes,3,rep,name=input" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *WorkflowInvocationSpec) Reset()                    { *m = WorkflowInvocationSpec{} }
func (m *WorkflowInvocationSpec) String() string            { return proto.CompactTextString(m) }
func (*WorkflowInvocationSpec) ProtoMessage()               {}
func (*WorkflowInvocationSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *WorkflowInvocationSpec) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowInvocationSpec) GetInput() map[string]*TypedValue {
	if m != nil {
		return m.Input
	}
	return nil
}

type WorkflowInvocationStatus struct {
	Status    WorkflowInvocationStatus_Status `protobuf:"varint,1,opt,name=status,enum=WorkflowInvocationStatus_Status" json:"status,omitempty"`
	UpdatedAt *google_protobuf.Timestamp      `protobuf:"bytes,2,opt,name=updatedAt" json:"updatedAt,omitempty"`
	Tasks     map[string]*FunctionInvocation  `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Output    *TypedValue                     `protobuf:"bytes,4,opt,name=output" json:"output,omitempty"`
}

func (m *WorkflowInvocationStatus) Reset()                    { *m = WorkflowInvocationStatus{} }
func (m *WorkflowInvocationStatus) String() string            { return proto.CompactTextString(m) }
func (*WorkflowInvocationStatus) ProtoMessage()               {}
func (*WorkflowInvocationStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *WorkflowInvocationStatus) GetStatus() WorkflowInvocationStatus_Status {
	if m != nil {
		return m.Status
	}
	return WorkflowInvocationStatus_UNKNOWN
}

func (m *WorkflowInvocationStatus) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *WorkflowInvocationStatus) GetTasks() map[string]*FunctionInvocation {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *WorkflowInvocationStatus) GetOutput() *TypedValue {
	if m != nil {
		return m.Output
	}
	return nil
}

type WorkflowInvocation struct {
	Metadata *ObjectMetadata           `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *WorkflowInvocationSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *WorkflowInvocationStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *WorkflowInvocation) Reset()                    { *m = WorkflowInvocation{} }
func (m *WorkflowInvocation) String() string            { return proto.CompactTextString(m) }
func (*WorkflowInvocation) ProtoMessage()               {}
func (*WorkflowInvocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *WorkflowInvocation) GetMetadata() *ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *WorkflowInvocation) GetSpec() *WorkflowInvocationSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *WorkflowInvocation) GetStatus() *WorkflowInvocationStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// Workflow Definition
//
// The workflowDefinition contains the definition of a workflow.
//
// Ideally the source code (json, yaml) can be converted directly to this message.
// Naming, triggers and versioning of the workflow itself is out of the scope of this data structure, which is delegated
// to the user/system upon the creation of a workflow.
type WorkflowSpec struct {
	// apiVersion describes what version is of the workflow definition.
	//
	// By default the workflow engine will assume the latest version to be used.
	ApiVersion string `protobuf:"bytes,1,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// TODO Parameters
	// Actions
	//
	// Dependency graph is build into the tasks
	Tasks map[string]*Task `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// From which task should the workflow return the output? Future: multiple? Implicit?
	OutputTask string `protobuf:"bytes,3,opt,name=outputTask" json:"outputTask,omitempty"`
}

func (m *WorkflowSpec) Reset()                    { *m = WorkflowSpec{} }
func (m *WorkflowSpec) String() string            { return proto.CompactTextString(m) }
func (*WorkflowSpec) ProtoMessage()               {}
func (*WorkflowSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *WorkflowSpec) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *WorkflowSpec) GetTasks() map[string]*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *WorkflowSpec) GetOutputTask() string {
	if m != nil {
		return m.OutputTask
	}
	return ""
}

// A task is the primitive unit of a workflow, representing an action that needs to be performed in order to continue.
//
// A task as a number of inputs and exactly two outputs
// Id is specified outside of task
type Task struct {
	// Type defines the type of the task that needs to be performed
	//
	// By default the following types are supported:
	// - `function`: execute a function.
	// - `exit`: Once this task is executed, the controller will exit the workflow, canceling all running tasks.
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// Name/identifier of the function
	Name   string                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Inputs map[string]*TypedValue `protobuf:"bytes,4,rep,name=inputs" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Dependencies for this task to execute
	Dependencies map[string]*TaskDependencyParameters `protobuf:"bytes,5,rep,name=dependencies" json:"dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Number of dependencies to wait for
	DependenciesAwait int32 `protobuf:"varint,6,opt,name=dependencies_await,json=dependenciesAwait" json:"dependencies_await,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Task) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetInputs() map[string]*TypedValue {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Task) GetDependencies() map[string]*TaskDependencyParameters {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *Task) GetDependenciesAwait() int32 {
	if m != nil {
		return m.DependenciesAwait
	}
	return 0
}

type TaskDependencyParameters struct {
	Type  TaskDependencyParameters_DependencyType `protobuf:"varint,1,opt,name=type,enum=TaskDependencyParameters_DependencyType" json:"type,omitempty"`
	Alias string                                  `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
}

func (m *TaskDependencyParameters) Reset()                    { *m = TaskDependencyParameters{} }
func (m *TaskDependencyParameters) String() string            { return proto.CompactTextString(m) }
func (*TaskDependencyParameters) ProtoMessage()               {}
func (*TaskDependencyParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TaskDependencyParameters) GetType() TaskDependencyParameters_DependencyType {
	if m != nil {
		return m.Type
	}
	return TaskDependencyParameters_DATA
}

func (m *TaskDependencyParameters) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

// Internal
type WorkflowStatus struct {
	Status        WorkflowStatus_Status      `protobuf:"varint,1,opt,name=status,enum=WorkflowStatus_Status" json:"status,omitempty"`
	UpdatedAt     *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=updatedAt" json:"updatedAt,omitempty"`
	ResolvedTasks map[string]*TaskTypeDef    `protobuf:"bytes,3,rep,name=resolvedTasks" json:"resolvedTasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *WorkflowStatus) Reset()                    { *m = WorkflowStatus{} }
func (m *WorkflowStatus) String() string            { return proto.CompactTextString(m) }
func (*WorkflowStatus) ProtoMessage()               {}
func (*WorkflowStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *WorkflowStatus) GetStatus() WorkflowStatus_Status {
	if m != nil {
		return m.Status
	}
	return WorkflowStatus_UNKNOWN
}

func (m *WorkflowStatus) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *WorkflowStatus) GetResolvedTasks() map[string]*TaskTypeDef {
	if m != nil {
		return m.ResolvedTasks
	}
	return nil
}

type TaskTypeDef struct {
	Src      string `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	Runtime  string `protobuf:"bytes,2,opt,name=runtime" json:"runtime,omitempty"`
	Resolved string `protobuf:"bytes,3,opt,name=resolved" json:"resolved,omitempty"`
}

func (m *TaskTypeDef) Reset()                    { *m = TaskTypeDef{} }
func (m *TaskTypeDef) String() string            { return proto.CompactTextString(m) }
func (*TaskTypeDef) ProtoMessage()               {}
func (*TaskTypeDef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *TaskTypeDef) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *TaskTypeDef) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *TaskTypeDef) GetResolved() string {
	if m != nil {
		return m.Resolved
	}
	return ""
}

// Copy of protobuf's Any, to avoid protobuf requirement of a protobuf-based type.
type TypedValue struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *TypedValue) Reset()                    { *m = TypedValue{} }
func (m *TypedValue) String() string            { return proto.CompactTextString(m) }
func (*TypedValue) ProtoMessage()               {}
func (*TypedValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TypedValue) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TypedValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*ObjectMetadata)(nil), "ObjectMetadata")
	proto.RegisterType((*Workflow)(nil), "Workflow")
	proto.RegisterType((*FunctionInvocation)(nil), "FunctionInvocation")
	proto.RegisterType((*FunctionInvocationSpec)(nil), "FunctionInvocationSpec")
	proto.RegisterType((*FunctionInvocationStatus)(nil), "FunctionInvocationStatus")
	proto.RegisterType((*WorkflowInvocationSpec)(nil), "WorkflowInvocationSpec")
	proto.RegisterType((*WorkflowInvocationStatus)(nil), "WorkflowInvocationStatus")
	proto.RegisterType((*WorkflowInvocation)(nil), "WorkflowInvocation")
	proto.RegisterType((*WorkflowSpec)(nil), "WorkflowSpec")
	proto.RegisterType((*Task)(nil), "Task")
	proto.RegisterType((*TaskDependencyParameters)(nil), "TaskDependencyParameters")
	proto.RegisterType((*WorkflowStatus)(nil), "WorkflowStatus")
	proto.RegisterType((*TaskTypeDef)(nil), "TaskTypeDef")
	proto.RegisterType((*TypedValue)(nil), "TypedValue")
	proto.RegisterEnum("FunctionInvocationStatus_Status", FunctionInvocationStatus_Status_name, FunctionInvocationStatus_Status_value)
	proto.RegisterEnum("WorkflowInvocationStatus_Status", WorkflowInvocationStatus_Status_name, WorkflowInvocationStatus_Status_value)
	proto.RegisterEnum("TaskDependencyParameters_DependencyType", TaskDependencyParameters_DependencyType_name, TaskDependencyParameters_DependencyType_value)
	proto.RegisterEnum("WorkflowStatus_Status", WorkflowStatus_Status_name, WorkflowStatus_Status_value)
}

func init() { proto.RegisterFile("pkg/types/types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1003 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xd1, 0x6e, 0xdb, 0x36,
	0x14, 0xad, 0x64, 0xcb, 0x89, 0xaf, 0x13, 0x47, 0xe1, 0xba, 0x54, 0xf5, 0x80, 0x2e, 0x55, 0x07,
	0xd4, 0x45, 0x31, 0x05, 0xf3, 0x80, 0x21, 0x68, 0x07, 0x0c, 0x6e, 0xa4, 0xb4, 0x46, 0x53, 0xdb,
	0x90, 0x9d, 0x16, 0x0b, 0x30, 0x14, 0x8a, 0xc5, 0x04, 0xaa, 0x6d, 0x49, 0x90, 0xa8, 0x04, 0x7e,
	0xde, 0x47, 0xec, 0x69, 0x18, 0xf6, 0x19, 0x7b, 0xda, 0x67, 0xec, 0x65, 0x3f, 0xb0, 0xbf, 0x18,
	0x48, 0x51, 0x36, 0xe5, 0x48, 0x28, 0xb6, 0x65, 0x2f, 0x86, 0xc8, 0x7b, 0x79, 0x79, 0x78, 0xcf,
	0xe1, 0x31, 0xe1, 0xd3, 0x70, 0x7a, 0x79, 0x40, 0x16, 0x21, 0x8e, 0xd3, 0x5f, 0x23, 0x8c, 0x02,
	0x12, 0xb4, 0x3e, 0xbf, 0x0c, 0x82, 0xcb, 0x19, 0x3e, 0x60, 0xa3, 0xf3, 0xe4, 0xe2, 0x80, 0x78,
	0x73, 0x1c, 0x13, 0x67, 0x1e, 0xa6, 0x09, 0xfa, 0x19, 0x34, 0x07, 0xe7, 0x1f, 0xf0, 0x84, 0xbc,
	0xc1, 0xc4, 0x71, 0x1d, 0xe2, 0xa0, 0x26, 0xc8, 0x9e, 0xab, 0x49, 0xfb, 0x52, 0xbb, 0x6e, 0xcb,
	0x9e, 0x8b, 0x0e, 0xa1, 0x3e, 0x89, 0xb0, 0x43, 0xb0, 0xdb, 0x25, 0x5a, 0x65, 0x5f, 0x6a, 0x37,
	0x3a, 0x2d, 0x23, 0x2d, 0x6b, 0x64, 0x65, 0x8d, 0x71, 0x56, 0xd6, 0x5e, 0x25, 0xeb, 0x3f, 0x4a,
	0xb0, 0xf9, 0x2e, 0x88, 0xa6, 0x17, 0xb3, 0xe0, 0x1a, 0x3d, 0x85, 0xcd, 0x39, 0xdf, 0x82, 0x15,
	0x6f, 0x74, 0x76, 0x8c, 0xfc, 0xce, 0xf6, 0x32, 0x01, 0x3d, 0x84, 0x6a, 0x1c, 0xe2, 0x89, 0x26,
	0xb3, 0xc4, 0x6d, 0x23, 0xab, 0x32, 0x0a, 0xf1, 0xc4, 0x66, 0x21, 0xf4, 0x18, 0x6a, 0x31, 0x71,
	0x48, 0x12, 0x73, 0x4c, 0x3b, 0xab, 0x24, 0x36, 0x6d, 0xf3, 0xb0, 0xfe, 0xab, 0x04, 0xe8, 0x38,
	0xf1, 0x27, 0xc4, 0x0b, 0xfc, 0x9e, 0x7f, 0x15, 0x4c, 0x1c, 0xfa, 0xf5, 0xcf, 0xf0, 0x3c, 0xcd,
	0xe1, 0xb9, 0x67, 0xdc, 0xac, 0x27, 0x20, 0xfb, 0x6a, 0x0d, 0xd9, 0xfd, 0xa2, 0xf4, 0x3c, 0xc6,
	0x3f, 0x24, 0xd8, 0x2b, 0xae, 0x89, 0xf6, 0xa1, 0x4a, 0x09, 0xe5, 0x18, 0xb7, 0x8c, 0xb1, 0x13,
	0x4f, 0xc7, 0x8b, 0x10, 0x9b, 0xf8, 0xc2, 0x66, 0x11, 0xb4, 0x07, 0x35, 0xe2, 0xc4, 0xd3, 0x9e,
	0xcb, 0xe0, 0xd5, 0x6d, 0x3e, 0x42, 0xcf, 0xa1, 0xe6, 0xf9, 0x61, 0x42, 0x28, 0x8e, 0x4a, 0xbb,
	0xd1, 0x79, 0x54, 0x02, 0xdb, 0xe8, 0xb1, 0x2c, 0xcb, 0x27, 0xd1, 0xc2, 0xe6, 0x4b, 0x5a, 0xc7,
	0xd0, 0x10, 0xa6, 0x91, 0x0a, 0x95, 0x29, 0x5e, 0x70, 0x55, 0xd0, 0x4f, 0xf4, 0x10, 0x94, 0x2b,
	0x67, 0x96, 0x60, 0xde, 0x93, 0x86, 0x41, 0x41, 0xb9, 0x6f, 0xe9, 0x94, 0x9d, 0x46, 0x9e, 0xc9,
	0x87, 0x92, 0xfe, 0x8b, 0x0c, 0x5a, 0xd9, 0xf1, 0xd1, 0xe1, 0xb2, 0x53, 0xb4, 0x70, 0xb3, 0xb3,
	0x5f, 0xda, 0x29, 0x23, 0xdf, 0x30, 0x2a, 0xca, 0x24, 0x74, 0xb9, 0x28, 0xe5, 0x8f, 0x8b, 0x72,
	0x99, 0x8c, 0x1e, 0x41, 0x2d, 0x48, 0x48, 0x98, 0x64, 0x5a, 0xce, 0x01, 0xe7, 0x21, 0xfd, 0x03,
	0xd4, 0x38, 0xc4, 0x06, 0x6c, 0x9c, 0xf6, 0x5f, 0xf7, 0x07, 0xef, 0xfa, 0xea, 0x1d, 0xb4, 0x0d,
	0xf5, 0xd1, 0xd1, 0x2b, 0xcb, 0x3c, 0x3d, 0xb1, 0x4c, 0x55, 0x42, 0x3b, 0xd0, 0xe8, 0xf5, 0xdf,
	0x0f, 0xed, 0xc1, 0x4b, 0xdb, 0x1a, 0x8d, 0x54, 0x99, 0xc5, 0x4f, 0x8f, 0x8e, 0x2c, 0xcb, 0xb4,
	0x4c, 0xb5, 0x82, 0x00, 0x6a, 0xc7, 0xdd, 0x1e, 0xcd, 0xad, 0xd2, 0x3a, 0xdd, 0x17, 0x03, 0x7b,
	0x6c, 0x99, 0xaa, 0x42, 0x07, 0xa3, 0xd7, 0xbd, 0xe1, 0xd0, 0x32, 0xd5, 0x9a, 0xfe, 0x9b, 0x04,
	0x7b, 0x99, 0x74, 0xd7, 0xb8, 0x7f, 0x00, 0x70, 0x9d, 0x45, 0xb2, 0x2b, 0x29, 0xcc, 0xa0, 0x43,
	0x50, 0x18, 0x5d, 0x9c, 0x60, 0xdd, 0x28, 0xae, 0x93, 0x12, 0x9c, 0xf2, 0x9b, 0x2e, 0x68, 0x59,
	0x00, 0xab, 0xc9, 0x7f, 0xcf, 0xee, 0xcf, 0x15, 0xd0, 0x0a, 0xf6, 0x2c, 0x63, 0xb7, 0x2c, 0xf5,
	0xf6, 0xd8, 0x7d, 0x06, 0x0a, 0x55, 0x7f, 0x26, 0xf9, 0x2f, 0xca, 0xb7, 0xa4, 0xf7, 0x88, 0x6b,
	0x3e, 0x5d, 0x22, 0x28, 0xa3, 0x5a, 0xaa, 0x8c, 0xd6, 0x1b, 0x80, 0xd5, 0xca, 0x82, 0xc6, 0x3d,
	0xc9, 0x37, 0xee, 0x93, 0x02, 0x45, 0x8b, 0x0d, 0xfc, 0xe1, 0x7f, 0x15, 0x1a, 0xf3, 0xbe, 0x9b,
	0x1d, 0xf8, 0x6f, 0xde, 0x57, 0xac, 0xb1, 0x52, 0xef, 0x2b, 0x23, 0x60, 0xe9, 0x7d, 0xbf, 0x4b,
	0xb0, 0x25, 0xfa, 0x3b, 0x55, 0xbd, 0x13, 0x7a, 0x6f, 0x71, 0x14, 0x7b, 0x81, 0x9f, 0xa9, 0x7e,
	0x35, 0x83, 0x8c, 0x8c, 0x63, 0x99, 0x71, 0xac, 0xe5, 0xfe, 0x1d, 0x0a, 0x78, 0x7d, 0x00, 0x90,
	0x92, 0x47, 0x43, 0x0c, 0x57, 0xdd, 0x16, 0x66, 0x5a, 0xdf, 0x7d, 0x84, 0xd2, 0xcf, 0xf2, 0x94,
	0x2a, 0x6c, 0x0b, 0x91, 0xc4, 0xbf, 0x64, 0xa8, 0xd2, 0x39, 0x84, 0xb8, 0x57, 0xa7, 0x3e, 0x9c,
	0xba, 0x33, 0x82, 0xaa, 0xef, 0xcc, 0x31, 0xdf, 0x97, 0x7d, 0xa3, 0x27, 0x4b, 0x67, 0xae, 0xb2,
	0x23, 0xec, 0xb2, 0x92, 0x45, 0x3e, 0x8c, 0x9e, 0xc3, 0x96, 0x8b, 0x43, 0xec, 0xbb, 0xd8, 0x9f,
	0x78, 0x38, 0xd6, 0x14, 0xb6, 0xe0, 0x5e, 0xba, 0xc0, 0x14, 0x22, 0xe9, 0xb2, 0x5c, 0x32, 0xfa,
	0x12, 0x90, 0x38, 0x7e, 0xef, 0x5c, 0x3b, 0x1e, 0xd1, 0x6a, 0xfb, 0x52, 0x5b, 0xb1, 0x77, 0xc5,
	0x48, 0x97, 0x06, 0x6e, 0xcb, 0xf3, 0x5b, 0x67, 0xb0, 0x7b, 0x03, 0x59, 0x41, 0xb5, 0x83, 0x7c,
	0xb5, 0xfb, 0xec, 0x4c, 0xcb, 0x85, 0x8b, 0xa1, 0x13, 0x39, 0x73, 0x4c, 0x70, 0x14, 0x8b, 0xbd,
	0xfe, 0x49, 0x02, 0xad, 0x2c, 0x0f, 0x7d, 0x2b, 0xfc, 0x57, 0x36, 0x3b, 0xed, 0xd2, 0x82, 0xab,
	0xc6, 0x2d, 0xe8, 0x09, 0x38, 0x53, 0x77, 0x41, 0x71, 0x66, 0x9e, 0x13, 0x73, 0xfa, 0xd2, 0x81,
	0xfe, 0x18, 0x9a, 0xf9, 0x6c, 0xb4, 0x09, 0x55, 0xb3, 0x3b, 0xee, 0xaa, 0x77, 0xe8, 0x5d, 0x3b,
	0x1a, 0xf4, 0xc7, 0xf6, 0xe0, 0x44, 0x95, 0xf4, 0x3f, 0x65, 0x68, 0xe6, 0x9f, 0x20, 0xc8, 0x58,
	0x73, 0xc0, 0xbd, 0xb5, 0x37, 0xca, 0xed, 0xf9, 0xde, 0x2b, 0xd8, 0x8e, 0x70, 0x1c, 0xcc, 0xae,
	0xb0, 0x3b, 0x16, 0xfc, 0x4f, 0x5f, 0xdf, 0xd0, 0x16, 0x93, 0x52, 0xc9, 0xe4, 0x17, 0xb6, 0xfa,
	0x80, 0x6e, 0x26, 0x15, 0xb0, 0xa7, 0xe7, 0xd9, 0xcb, 0x3f, 0x4c, 0x04, 0xc2, 0x8e, 0x8b, 0x1d,
	0xae, 0x01, 0x1b, 0xc3, 0xae, 0x3d, 0xea, 0xf5, 0x5f, 0xaa, 0x12, 0xaa, 0x83, 0x62, 0x5b, 0x5d,
	0xf3, 0x7b, 0x55, 0x16, 0xac, 0xac, 0x42, 0x73, 0x4c, 0xeb, 0xc4, 0xa2, 0x56, 0x56, 0xd5, 0x4f,
	0xa1, 0x21, 0xec, 0x40, 0x01, 0xc5, 0xd1, 0x24, 0x03, 0x14, 0x47, 0x13, 0xa4, 0xc1, 0x46, 0x94,
	0xf8, 0xf4, 0x7d, 0xcb, 0x09, 0xcc, 0x86, 0xa8, 0x05, 0x9b, 0xd9, 0x19, 0xf9, 0x35, 0x5c, 0x8e,
	0xf5, 0x6f, 0x00, 0x56, 0x22, 0x5e, 0x5e, 0x60, 0x49, 0xb8, 0xc0, 0x77, 0xc5, 0x83, 0x6e, 0xf1,
	0xa3, 0xbd, 0xd8, 0x38, 0x53, 0xd8, 0x3b, 0xfb, 0xbc, 0xc6, 0x88, 0xf9, 0xfa, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xdc, 0x52, 0x6c, 0xe3, 0x81, 0x0b, 0x00, 0x00,
}
