// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/types/types.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	pkg/types/types.proto

It has these top-level messages:
	ObjectMetadata
	Workflow
	WorkflowSpec
	FunctionInvocation
	FunctionInvocationSpec
	FunctionInvocationStatus
	WorkflowInvocationSpec
	WorkflowInvocationStatus
	WorkflowInvocationContainer
	WorkflowDefinition
	Task
	TaskParameters
	WorkflowStatus
	TaskTypeDef
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Event Types
type WorkflowEvent int32

const (
	WorkflowEvent_WORKFLOW_CREATED        WorkflowEvent = 0
	WorkflowEvent_WORKFLOW_UPDATED        WorkflowEvent = 1
	WorkflowEvent_WORKFLOW_PARSED         WorkflowEvent = 2
	WorkflowEvent_WORKFLOW_DELETED        WorkflowEvent = 3
	WorkflowEvent_WORKFLOW_PARSING_FAILED WorkflowEvent = 4
)

var WorkflowEvent_name = map[int32]string{
	0: "WORKFLOW_CREATED",
	1: "WORKFLOW_UPDATED",
	2: "WORKFLOW_PARSED",
	3: "WORKFLOW_DELETED",
	4: "WORKFLOW_PARSING_FAILED",
}
var WorkflowEvent_value = map[string]int32{
	"WORKFLOW_CREATED":        0,
	"WORKFLOW_UPDATED":        1,
	"WORKFLOW_PARSED":         2,
	"WORKFLOW_DELETED":        3,
	"WORKFLOW_PARSING_FAILED": 4,
}

func (x WorkflowEvent) String() string {
	return proto.EnumName(WorkflowEvent_name, int32(x))
}
func (WorkflowEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InvocationEvent int32

const (
	InvocationEvent_TASK_STARTED            InvocationEvent = 0
	InvocationEvent_TASK_SKIPPED            InvocationEvent = 1
	InvocationEvent_TASK_HEARTBEAT_REQUEST  InvocationEvent = 2
	InvocationEvent_TASK_HEARTBEAT_RESPONSE InvocationEvent = 3
	InvocationEvent_TASK_SUCCEEDED          InvocationEvent = 4
	InvocationEvent_TASK_FAILED             InvocationEvent = 5
	InvocationEvent_TASK_ABORTED            InvocationEvent = 6
	InvocationEvent_INVOCATION_CREATED      InvocationEvent = 7
	InvocationEvent_INVOCATION_COMPLETED    InvocationEvent = 8
	InvocationEvent_INVOCATION_CANCELED     InvocationEvent = 9
)

var InvocationEvent_name = map[int32]string{
	0: "TASK_STARTED",
	1: "TASK_SKIPPED",
	2: "TASK_HEARTBEAT_REQUEST",
	3: "TASK_HEARTBEAT_RESPONSE",
	4: "TASK_SUCCEEDED",
	5: "TASK_FAILED",
	6: "TASK_ABORTED",
	7: "INVOCATION_CREATED",
	8: "INVOCATION_COMPLETED",
	9: "INVOCATION_CANCELED",
}
var InvocationEvent_value = map[string]int32{
	"TASK_STARTED":            0,
	"TASK_SKIPPED":            1,
	"TASK_HEARTBEAT_REQUEST":  2,
	"TASK_HEARTBEAT_RESPONSE": 3,
	"TASK_SUCCEEDED":          4,
	"TASK_FAILED":             5,
	"TASK_ABORTED":            6,
	"INVOCATION_CREATED":      7,
	"INVOCATION_COMPLETED":    8,
	"INVOCATION_CANCELED":     9,
}

func (x InvocationEvent) String() string {
	return proto.EnumName(InvocationEvent_name, int32(x))
}
func (InvocationEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TaskType int32

const (
	TaskType_FUNCTION TaskType = 0
)

var TaskType_name = map[int32]string{
	0: "FUNCTION",
}
var TaskType_value = map[string]int32{
	"FUNCTION": 0,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}
func (TaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type FunctionInvocationStatus_Status int32

const (
	FunctionInvocationStatus_UNKNOWN     FunctionInvocationStatus_Status = 0
	FunctionInvocationStatus_SCHEDULED   FunctionInvocationStatus_Status = 1
	FunctionInvocationStatus_IN_PROGRESS FunctionInvocationStatus_Status = 2
	FunctionInvocationStatus_SUCCEEDED   FunctionInvocationStatus_Status = 3
	FunctionInvocationStatus_FAILED      FunctionInvocationStatus_Status = 4
	FunctionInvocationStatus_ABORTED     FunctionInvocationStatus_Status = 5
	FunctionInvocationStatus_SKIPPED     FunctionInvocationStatus_Status = 6
)

var FunctionInvocationStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "SCHEDULED",
	2: "IN_PROGRESS",
	3: "SUCCEEDED",
	4: "FAILED",
	5: "ABORTED",
	6: "SKIPPED",
}
var FunctionInvocationStatus_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"SCHEDULED":   1,
	"IN_PROGRESS": 2,
	"SUCCEEDED":   3,
	"FAILED":      4,
	"ABORTED":     5,
	"SKIPPED":     6,
}

func (x FunctionInvocationStatus_Status) String() string {
	return proto.EnumName(FunctionInvocationStatus_Status_name, int32(x))
}
func (FunctionInvocationStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type WorkflowInvocationStatus_Status int32

const (
	WorkflowInvocationStatus_UNKNOWN     WorkflowInvocationStatus_Status = 0
	WorkflowInvocationStatus_SCHEDULED   WorkflowInvocationStatus_Status = 1
	WorkflowInvocationStatus_IN_PROGRESS WorkflowInvocationStatus_Status = 2
	WorkflowInvocationStatus_SUCCEEDED   WorkflowInvocationStatus_Status = 3
	WorkflowInvocationStatus_FAILED      WorkflowInvocationStatus_Status = 4
	WorkflowInvocationStatus_ABORTED     WorkflowInvocationStatus_Status = 5
)

var WorkflowInvocationStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "SCHEDULED",
	2: "IN_PROGRESS",
	3: "SUCCEEDED",
	4: "FAILED",
	5: "ABORTED",
}
var WorkflowInvocationStatus_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"SCHEDULED":   1,
	"IN_PROGRESS": 2,
	"SUCCEEDED":   3,
	"FAILED":      4,
	"ABORTED":     5,
}

func (x WorkflowInvocationStatus_Status) String() string {
	return proto.EnumName(WorkflowInvocationStatus_Status_name, int32(x))
}
func (WorkflowInvocationStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

type WorkflowStatus_Status int32

const (
	WorkflowStatus_UNKNOWN WorkflowStatus_Status = 0
	WorkflowStatus_PARSING WorkflowStatus_Status = 1
	WorkflowStatus_READY   WorkflowStatus_Status = 2
	WorkflowStatus_FAILED  WorkflowStatus_Status = 3
	WorkflowStatus_DELETED WorkflowStatus_Status = 4
)

var WorkflowStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "PARSING",
	2: "READY",
	3: "FAILED",
	4: "DELETED",
}
var WorkflowStatus_Status_value = map[string]int32{
	"UNKNOWN": 0,
	"PARSING": 1,
	"READY":   2,
	"FAILED":  3,
	"DELETED": 4,
}

func (x WorkflowStatus_Status) String() string {
	return proto.EnumName(WorkflowStatus_Status_name, int32(x))
}
func (WorkflowStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

// Common
type ObjectMetadata struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	//    string namespace = 2;
	//    string name = 3;
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (m *ObjectMetadata) Reset()                    { *m = ObjectMetadata{} }
func (m *ObjectMetadata) String() string            { return proto.CompactTextString(m) }
func (*ObjectMetadata) ProtoMessage()               {}
func (*ObjectMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ObjectMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjectMetadata) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// Workflow Model
type Workflow struct {
	Metadata *ObjectMetadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *WorkflowSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *WorkflowStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *Workflow) Reset()                    { *m = Workflow{} }
func (m *Workflow) String() string            { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()               {}
func (*Workflow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Workflow) GetMetadata() *ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Workflow) GetSpec() *WorkflowSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Workflow) GetStatus() *WorkflowStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type WorkflowSpec struct {
	Name    string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version string              `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Src     *WorkflowDefinition `protobuf:"bytes,3,opt,name=src" json:"src,omitempty"`
}

func (m *WorkflowSpec) Reset()                    { *m = WorkflowSpec{} }
func (m *WorkflowSpec) String() string            { return proto.CompactTextString(m) }
func (*WorkflowSpec) ProtoMessage()               {}
func (*WorkflowSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *WorkflowSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowSpec) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *WorkflowSpec) GetSrc() *WorkflowDefinition {
	if m != nil {
		return m.Src
	}
	return nil
}

// Function Invocation Model
//
// It contains no indication which workflow/task it is executed for
type FunctionInvocation struct {
	Metadata *ObjectMetadata           `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *FunctionInvocationSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *FunctionInvocationStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *FunctionInvocation) Reset()                    { *m = FunctionInvocation{} }
func (m *FunctionInvocation) String() string            { return proto.CompactTextString(m) }
func (*FunctionInvocation) ProtoMessage()               {}
func (*FunctionInvocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FunctionInvocation) GetMetadata() *ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FunctionInvocation) GetSpec() *FunctionInvocationSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *FunctionInvocation) GetStatus() *FunctionInvocationStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type FunctionInvocationSpec struct {
	// Id of the function to be invoked (no ambiguatity at this point
	FunctionId   string `protobuf:"bytes,1,opt,name=functionId" json:"functionId,omitempty"`
	FunctionName string `protobuf:"bytes,2,opt,name=functionName" json:"functionName,omitempty"`
	TaskId       string `protobuf:"bytes,3,opt,name=taskId" json:"taskId,omitempty"`
}

func (m *FunctionInvocationSpec) Reset()                    { *m = FunctionInvocationSpec{} }
func (m *FunctionInvocationSpec) String() string            { return proto.CompactTextString(m) }
func (*FunctionInvocationSpec) ProtoMessage()               {}
func (*FunctionInvocationSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FunctionInvocationSpec) GetFunctionId() string {
	if m != nil {
		return m.FunctionId
	}
	return ""
}

func (m *FunctionInvocationSpec) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *FunctionInvocationSpec) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type FunctionInvocationStatus struct {
	Status    FunctionInvocationStatus_Status `protobuf:"varint,1,opt,name=status,enum=FunctionInvocationStatus_Status" json:"status,omitempty"`
	UpdatedAt *google_protobuf.Timestamp      `protobuf:"bytes,2,opt,name=updatedAt" json:"updatedAt,omitempty"`
}

func (m *FunctionInvocationStatus) Reset()                    { *m = FunctionInvocationStatus{} }
func (m *FunctionInvocationStatus) String() string            { return proto.CompactTextString(m) }
func (*FunctionInvocationStatus) ProtoMessage()               {}
func (*FunctionInvocationStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FunctionInvocationStatus) GetStatus() FunctionInvocationStatus_Status {
	if m != nil {
		return m.Status
	}
	return FunctionInvocationStatus_UNKNOWN
}

func (m *FunctionInvocationStatus) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// Workflow Invocation Model
type WorkflowInvocationSpec struct {
	WorkflowId string `protobuf:"bytes,1,opt,name=workflowId" json:"workflowId,omitempty"`
}

func (m *WorkflowInvocationSpec) Reset()                    { *m = WorkflowInvocationSpec{} }
func (m *WorkflowInvocationSpec) String() string            { return proto.CompactTextString(m) }
func (*WorkflowInvocationSpec) ProtoMessage()               {}
func (*WorkflowInvocationSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *WorkflowInvocationSpec) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type WorkflowInvocationStatus struct {
	Status    WorkflowInvocationStatus_Status `protobuf:"varint,1,opt,name=status,enum=WorkflowInvocationStatus_Status" json:"status,omitempty"`
	UpdatedAt *google_protobuf.Timestamp      `protobuf:"bytes,2,opt,name=updatedAt" json:"updatedAt,omitempty"`
	Tasks     map[string]*FunctionInvocation  `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *WorkflowInvocationStatus) Reset()                    { *m = WorkflowInvocationStatus{} }
func (m *WorkflowInvocationStatus) String() string            { return proto.CompactTextString(m) }
func (*WorkflowInvocationStatus) ProtoMessage()               {}
func (*WorkflowInvocationStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *WorkflowInvocationStatus) GetStatus() WorkflowInvocationStatus_Status {
	if m != nil {
		return m.Status
	}
	return WorkflowInvocationStatus_UNKNOWN
}

func (m *WorkflowInvocationStatus) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *WorkflowInvocationStatus) GetTasks() map[string]*FunctionInvocation {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type WorkflowInvocationContainer struct {
	Metadata *ObjectMetadata           `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *WorkflowInvocationSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *WorkflowInvocationStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *WorkflowInvocationContainer) Reset()                    { *m = WorkflowInvocationContainer{} }
func (m *WorkflowInvocationContainer) String() string            { return proto.CompactTextString(m) }
func (*WorkflowInvocationContainer) ProtoMessage()               {}
func (*WorkflowInvocationContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *WorkflowInvocationContainer) GetMetadata() *ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *WorkflowInvocationContainer) GetSpec() *WorkflowInvocationSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *WorkflowInvocationContainer) GetStatus() *WorkflowInvocationStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// The workflowDefinition contains the definition of a workflow.
//
// Ideally the source code (json, yaml) can be converted directly to this message.
// Naming, triggers and versioning of the workflow itself is out of the scope of this data structure, which is delegated
// to the user/system upon the creation of a workflow.
type WorkflowDefinition struct {
	// apiVersion describes what version is of the workflow definition.
	//
	// By default the workflow engine will assume the latest version to be used.
	ApiVersion string `protobuf:"bytes,1,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// TODO Parameters
	// Actions
	//
	// Dependency graph is build into the tasks
	Tasks map[string]*Task `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *WorkflowDefinition) Reset()                    { *m = WorkflowDefinition{} }
func (m *WorkflowDefinition) String() string            { return proto.CompactTextString(m) }
func (*WorkflowDefinition) ProtoMessage()               {}
func (*WorkflowDefinition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *WorkflowDefinition) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *WorkflowDefinition) GetTasks() map[string]*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

// A task is the primitive unit of a workflow, representing an action that needs to be performed in order to continue.
//
// A task as a number of inputs and exactly two outputs
// Id is specified outside of task
type Task struct {
	// Type defines the type of the task that needs to be performed
	//
	// By default the following types are supported:
	// - `function`: execute a function.
	// - `exit`: Once this task is executed, the controller will exit the workflow, canceling all running tasks.
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// Name/identifier of the function
	//
	//
	Name string            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Args []*TaskParameters `protobuf:"bytes,4,rep,name=args" json:"args,omitempty"`
	// TODO next or after
	// Dependencies for this task to execute
	Dependencies []string `protobuf:"bytes,5,rep,name=dependencies" json:"dependencies,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Task) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetArgs() []*TaskParameters {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Task) GetDependencies() []string {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type TaskParameters struct {
}

func (m *TaskParameters) Reset()                    { *m = TaskParameters{} }
func (m *TaskParameters) String() string            { return proto.CompactTextString(m) }
func (*TaskParameters) ProtoMessage()               {}
func (*TaskParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

// Internal
type WorkflowStatus struct {
	Status        WorkflowStatus_Status      `protobuf:"varint,1,opt,name=status,enum=WorkflowStatus_Status" json:"status,omitempty"`
	UpdatedAt     *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=updatedAt" json:"updatedAt,omitempty"`
	ResolvedTasks map[string]*TaskTypeDef    `protobuf:"bytes,3,rep,name=resolvedTasks" json:"resolvedTasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *WorkflowStatus) Reset()                    { *m = WorkflowStatus{} }
func (m *WorkflowStatus) String() string            { return proto.CompactTextString(m) }
func (*WorkflowStatus) ProtoMessage()               {}
func (*WorkflowStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *WorkflowStatus) GetStatus() WorkflowStatus_Status {
	if m != nil {
		return m.Status
	}
	return WorkflowStatus_UNKNOWN
}

func (m *WorkflowStatus) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *WorkflowStatus) GetResolvedTasks() map[string]*TaskTypeDef {
	if m != nil {
		return m.ResolvedTasks
	}
	return nil
}

type TaskTypeDef struct {
	Src      string `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	Resolved string `protobuf:"bytes,2,opt,name=resolved" json:"resolved,omitempty"`
}

func (m *TaskTypeDef) Reset()                    { *m = TaskTypeDef{} }
func (m *TaskTypeDef) String() string            { return proto.CompactTextString(m) }
func (*TaskTypeDef) ProtoMessage()               {}
func (*TaskTypeDef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TaskTypeDef) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *TaskTypeDef) GetResolved() string {
	if m != nil {
		return m.Resolved
	}
	return ""
}

func init() {
	proto.RegisterType((*ObjectMetadata)(nil), "ObjectMetadata")
	proto.RegisterType((*Workflow)(nil), "Workflow")
	proto.RegisterType((*WorkflowSpec)(nil), "WorkflowSpec")
	proto.RegisterType((*FunctionInvocation)(nil), "FunctionInvocation")
	proto.RegisterType((*FunctionInvocationSpec)(nil), "FunctionInvocationSpec")
	proto.RegisterType((*FunctionInvocationStatus)(nil), "FunctionInvocationStatus")
	proto.RegisterType((*WorkflowInvocationSpec)(nil), "WorkflowInvocationSpec")
	proto.RegisterType((*WorkflowInvocationStatus)(nil), "WorkflowInvocationStatus")
	proto.RegisterType((*WorkflowInvocationContainer)(nil), "WorkflowInvocationContainer")
	proto.RegisterType((*WorkflowDefinition)(nil), "WorkflowDefinition")
	proto.RegisterType((*Task)(nil), "Task")
	proto.RegisterType((*TaskParameters)(nil), "TaskParameters")
	proto.RegisterType((*WorkflowStatus)(nil), "WorkflowStatus")
	proto.RegisterType((*TaskTypeDef)(nil), "TaskTypeDef")
	proto.RegisterEnum("WorkflowEvent", WorkflowEvent_name, WorkflowEvent_value)
	proto.RegisterEnum("InvocationEvent", InvocationEvent_name, InvocationEvent_value)
	proto.RegisterEnum("TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("FunctionInvocationStatus_Status", FunctionInvocationStatus_Status_name, FunctionInvocationStatus_Status_value)
	proto.RegisterEnum("WorkflowInvocationStatus_Status", WorkflowInvocationStatus_Status_name, WorkflowInvocationStatus_Status_value)
	proto.RegisterEnum("WorkflowStatus_Status", WorkflowStatus_Status_name, WorkflowStatus_Status_value)
}

func init() { proto.RegisterFile("pkg/types/types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1009 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5d, 0x4f, 0xe3, 0x46,
	0x17, 0xc6, 0x76, 0x12, 0x92, 0x13, 0x48, 0xac, 0x61, 0xdf, 0xe0, 0x37, 0x48, 0x5b, 0xea, 0xb6,
	0x2a, 0x65, 0xa5, 0xa0, 0xd2, 0x5e, 0xa0, 0xed, 0x45, 0xe5, 0x8d, 0x07, 0x88, 0x00, 0x3b, 0x1d,
	0x3b, 0x8b, 0x5a, 0xa9, 0x42, 0xc6, 0x19, 0x90, 0x17, 0xb0, 0x2d, 0xdb, 0x80, 0xb8, 0xde, 0x5f,
	0xd2, 0xdb, 0xf6, 0x2f, 0xf5, 0x47, 0xf4, 0xb2, 0xea, 0x55, 0x35, 0xe3, 0x8f, 0xd8, 0x24, 0xd1,
	0xaa, 0xea, 0xf6, 0xc6, 0xf2, 0x3c, 0xe7, 0x99, 0xf3, 0x7d, 0xce, 0xc0, 0xff, 0xc2, 0x9b, 0xeb,
	0xbd, 0xe4, 0x29, 0xa4, 0x71, 0xfa, 0x1d, 0x84, 0x51, 0x90, 0x04, 0xfd, 0x4f, 0xae, 0x83, 0xe0,
	0xfa, 0x96, 0xee, 0xf1, 0xd3, 0xe5, 0xfd, 0xd5, 0x5e, 0xe2, 0xdd, 0xd1, 0x38, 0x71, 0xee, 0xc2,
	0x94, 0xa0, 0xfe, 0x04, 0x1d, 0xf3, 0xf2, 0x1d, 0x75, 0x93, 0x33, 0x9a, 0x38, 0x53, 0x27, 0x71,
	0x50, 0x07, 0x44, 0x6f, 0xaa, 0x08, 0xdb, 0xc2, 0x4e, 0x8b, 0x88, 0xde, 0x14, 0x1d, 0x40, 0xcb,
	0x8d, 0xa8, 0x93, 0xd0, 0xa9, 0x96, 0x28, 0xd2, 0xb6, 0xb0, 0xd3, 0xde, 0xef, 0x0f, 0x52, 0xb5,
	0x83, 0x5c, 0xed, 0xc0, 0xce, 0xd5, 0x92, 0x19, 0x59, 0x7d, 0x2f, 0x40, 0xf3, 0x3c, 0x88, 0x6e,
	0xae, 0x6e, 0x83, 0x47, 0xf4, 0x0a, 0x9a, 0x77, 0x99, 0x09, 0xae, 0xbc, 0xbd, 0xdf, 0x1d, 0x54,
	0x2d, 0x93, 0x82, 0x80, 0x3e, 0x85, 0x5a, 0x1c, 0x52, 0x57, 0x11, 0x39, 0x71, 0x7d, 0x90, 0x6b,
	0xb1, 0x42, 0xea, 0x12, 0x2e, 0x42, 0x5f, 0x42, 0x23, 0x4e, 0x9c, 0xe4, 0x3e, 0xce, 0x7c, 0xea,
	0xce, 0x48, 0x1c, 0x26, 0x99, 0x58, 0x75, 0x61, 0xad, 0x7c, 0x1d, 0x21, 0xa8, 0xf9, 0xce, 0x1d,
	0xcd, 0x22, 0xe4, 0xff, 0x48, 0x81, 0xd5, 0x07, 0x1a, 0xc5, 0x5e, 0xe0, 0x73, 0x93, 0x2d, 0x92,
	0x1f, 0xd1, 0x17, 0x20, 0xc5, 0x91, 0x9b, 0xd9, 0xd8, 0x28, 0x6c, 0xe8, 0xf4, 0xca, 0xf3, 0xbd,
	0xc4, 0x0b, 0x7c, 0xc2, 0xe4, 0xea, 0x2f, 0x02, 0xa0, 0xc3, 0x7b, 0xdf, 0x65, 0xc8, 0xc8, 0x7f,
	0x08, 0x5c, 0x87, 0xfd, 0xfd, 0xb3, 0xa0, 0x5f, 0x55, 0x82, 0xde, 0x1c, 0xcc, 0xeb, 0x2b, 0x85,
	0xff, 0xf5, 0xb3, 0xf0, 0xff, 0xbf, 0x88, 0x5e, 0x4d, 0x44, 0x02, 0xbd, 0xc5, 0x2a, 0xd1, 0x4b,
	0x80, 0xab, 0x5c, 0x92, 0x97, 0xbe, 0x84, 0x20, 0x15, 0xd6, 0xf2, 0x93, 0xc1, 0x52, 0x97, 0xe6,
	0xa8, 0x82, 0xa1, 0x1e, 0x34, 0x12, 0x27, 0xbe, 0x19, 0x4d, 0xb9, 0x43, 0x2d, 0x92, 0x9d, 0xd4,
	0xbf, 0x04, 0x50, 0x96, 0xb9, 0x86, 0x0e, 0x8a, 0x28, 0x98, 0xd1, 0xce, 0xfe, 0xf6, 0xd2, 0x28,
	0x06, 0xd5, 0x60, 0x58, 0x57, 0xde, 0x87, 0xd3, 0xac, 0x2b, 0xc5, 0x0f, 0x77, 0x65, 0x41, 0x56,
	0xdf, 0x41, 0x23, 0xb3, 0xde, 0x86, 0xd5, 0x89, 0x71, 0x62, 0x98, 0xe7, 0x86, 0xbc, 0x82, 0xd6,
	0xa1, 0x65, 0x0d, 0x8f, 0xb1, 0x3e, 0x39, 0xc5, 0xba, 0x2c, 0xa0, 0x2e, 0xb4, 0x47, 0xc6, 0xc5,
	0x98, 0x98, 0x47, 0x04, 0x5b, 0x96, 0x2c, 0x72, 0xf9, 0x64, 0x38, 0xc4, 0x58, 0xc7, 0xba, 0x2c,
	0x21, 0x80, 0xc6, 0xa1, 0x36, 0x62, 0xdc, 0x1a, 0xd3, 0xa3, 0xbd, 0x31, 0x89, 0x8d, 0x75, 0xb9,
	0xce, 0x0e, 0xd6, 0xc9, 0x68, 0x3c, 0xc6, 0xba, 0xdc, 0x50, 0x0f, 0xa0, 0x97, 0x77, 0xcc, 0x7c,
	0xca, 0x1f, 0x73, 0x49, 0x91, 0xf2, 0x19, 0xa2, 0xfe, 0x29, 0x82, 0xb2, 0xe0, 0xea, 0xb2, 0xb4,
	0x2d, 0xa3, 0x7e, 0xb4, 0xb4, 0xa1, 0xd7, 0x50, 0x67, 0x15, 0x65, 0xfd, 0x26, 0xed, 0xb4, 0xf7,
	0x3f, 0x5f, 0x6e, 0xd2, 0x66, 0x34, 0xec, 0x27, 0xd1, 0x13, 0x49, 0xaf, 0xf4, 0xcf, 0x00, 0x66,
	0x20, 0x92, 0x41, 0xba, 0xa1, 0x4f, 0x59, 0xcc, 0xec, 0x17, 0x7d, 0x05, 0xf5, 0x07, 0xe7, 0xf6,
	0x9e, 0x66, 0x1e, 0x6d, 0x2c, 0xe8, 0x02, 0x92, 0x32, 0x5e, 0x8b, 0x07, 0x82, 0xfa, 0xf3, 0x7f,
	0x5a, 0x41, 0xf5, 0x57, 0x01, 0xb6, 0xe6, 0x83, 0x1b, 0x06, 0x7e, 0xe2, 0x78, 0x3e, 0x8d, 0xfe,
	0xdd, 0x50, 0x2f, 0x6e, 0x87, 0xa5, 0x43, 0xbd, 0x2c, 0xc9, 0xc5, 0x50, 0xff, 0x26, 0x00, 0x9a,
	0x5f, 0x4a, 0xac, 0xbd, 0x9c, 0xd0, 0x7b, 0x9b, 0xed, 0xb4, 0xac, 0xbd, 0x66, 0x08, 0xfa, 0x36,
	0xaf, 0xa6, 0xc8, 0xab, 0xf9, 0x72, 0xc1, 0x62, 0x5b, 0x50, 0xc7, 0xef, 0x3f, 0x50, 0xc7, 0xad,
	0x6a, 0x1d, 0xeb, 0x5c, 0x45, 0xb9, 0x72, 0x8f, 0x50, 0x63, 0x10, 0xdb, 0xc1, 0xec, 0x95, 0xca,
	0x16, 0x09, 0xff, 0x2f, 0xf6, 0xb2, 0x54, 0xda, 0xcb, 0x9f, 0x41, 0xcd, 0x89, 0xae, 0x63, 0xa5,
	0xc6, 0xbd, 0xec, 0x72, 0x7d, 0x63, 0x27, 0x72, 0xee, 0x68, 0x42, 0xa3, 0x98, 0x70, 0x21, 0xdb,
	0x4e, 0x53, 0x1a, 0x52, 0x7f, 0x4a, 0x7d, 0xd7, 0xa3, 0xb1, 0x52, 0xdf, 0x96, 0xd8, 0x76, 0x2a,
	0x63, 0xaa, 0x0c, 0x9d, 0xea, 0x5d, 0xf5, 0x77, 0x11, 0x3a, 0xd5, 0x17, 0x03, 0x0d, 0x9e, 0x8d,
	0x55, 0xef, 0xd9, 0x93, 0xf2, 0xf1, 0x86, 0xe9, 0x18, 0xd6, 0x23, 0x1a, 0x07, 0xb7, 0x0f, 0x74,
	0x6a, 0x97, 0x86, 0x4a, 0x7d, 0x6e, 0x90, 0x94, 0x49, 0x69, 0x29, 0xaa, 0x17, 0xfb, 0x06, 0xa0,
	0x79, 0xd2, 0x82, 0xd2, 0xa8, 0xd5, 0xd2, 0xac, 0xf1, 0x54, 0xda, 0x4f, 0x21, 0xd5, 0xe9, 0x55,
	0xb9, 0x42, 0x87, 0x8b, 0x67, 0xab, 0x0d, 0xab, 0x63, 0x8d, 0x58, 0x23, 0xe3, 0x48, 0x16, 0x50,
	0x0b, 0xea, 0x04, 0x6b, 0xfa, 0x8f, 0xb2, 0x58, 0x1a, 0x22, 0x89, 0x71, 0x74, 0x7c, 0x8a, 0xd9,
	0x10, 0xd5, 0xd4, 0xef, 0xa0, 0x5d, 0xb2, 0xc0, 0x1c, 0x62, 0xcf, 0x68, 0xe6, 0x50, 0x1c, 0xb9,
	0xa8, 0x0f, 0xcd, 0x3c, 0x92, 0xac, 0x0d, 0x8a, 0xf3, 0xee, 0x7b, 0x01, 0xd6, 0xf3, 0x4c, 0xe0,
	0x07, 0xea, 0x27, 0xe8, 0x05, 0xc8, 0xe7, 0x26, 0x39, 0x39, 0x3c, 0x35, 0xcf, 0x2f, 0x86, 0x04,
	0x6b, 0xcc, 0xc8, 0x4a, 0x05, 0x9d, 0x8c, 0x75, 0x8e, 0x0a, 0x68, 0x03, 0xba, 0x05, 0xca, 0x9c,
	0xc6, 0xba, 0x2c, 0x56, 0xa8, 0xb9, 0x97, 0x12, 0xda, 0x82, 0xcd, 0x0a, 0x75, 0x64, 0x1c, 0x5d,
	0xe4, 0x4b, 0x61, 0xf7, 0x0f, 0x01, 0xba, 0xb3, 0xb9, 0x4b, 0xfd, 0x90, 0x61, 0xcd, 0xd6, 0xac,
	0x93, 0x0b, 0xcb, 0xd6, 0x48, 0xea, 0x43, 0x81, 0x64, 0x4b, 0x5f, 0x40, 0x7d, 0xe8, 0x71, 0xe4,
	0x18, 0x6b, 0xc4, 0x7e, 0x83, 0x35, 0xfb, 0x82, 0xe0, 0x1f, 0x26, 0xd8, 0xb2, 0x65, 0x91, 0x19,
	0x9c, 0x93, 0x59, 0x63, 0xd3, 0xb0, 0xb0, 0x2c, 0x21, 0x04, 0x9d, 0x54, 0x55, 0xb1, 0xa5, 0x6a,
	0x6c, 0x8b, 0x71, 0x2c, 0xf3, 0xaa, 0x5e, 0xd8, 0xcb, 0xf7, 0x55, 0x03, 0xf5, 0x00, 0x8d, 0x8c,
	0xb7, 0xe6, 0x50, 0xb3, 0x47, 0xa6, 0x51, 0x64, 0x67, 0x15, 0x29, 0xf0, 0xa2, 0x8c, 0x9b, 0x67,
	0xe3, 0x34, 0xec, 0x26, 0xda, 0x84, 0x8d, 0xb2, 0x44, 0x33, 0x86, 0x98, 0x29, 0x6f, 0xed, 0x2a,
	0xd0, 0xcc, 0xab, 0x86, 0xd6, 0xa0, 0x79, 0x38, 0x31, 0x86, 0x8c, 0x22, 0xaf, 0x5c, 0x36, 0x78,
	0x43, 0x7f, 0xf3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x31, 0x1d, 0xab, 0x68, 0x0a, 0x00,
	0x00,
}
