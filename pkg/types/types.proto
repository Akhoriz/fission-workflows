syntax = "proto3";

import "google/protobuf/timestamp.proto";

// Common
message ObjectMetadata {
    string id = 1;
    //    string namespace = 2;
    //    string name = 3;
    google.protobuf.Timestamp createdAt = 3;
}


// Event Types
enum WorkflowEvent {
    WORKFLOW_CREATED = 0;
    WORKFLOW_UPDATED = 1;
    WORKFLOW_DELETED = 2;
}

enum InvocationEvent {
    TASK_STARTED = 0; // origin: Engine
    TASK_SKIPPED = 1; // origin: Feedback
    TASK_HEARTBEAT = 2; // origin: Engine
    TASK_SUCCEEDED = 3; // origin: Feedback
    TASK_FAILED = 4; // origin: Feedback
    TASK_ABORTED = 5; // origin: Engine
    INVOCATION_CREATED = 6; // origin: User/Engine
    INVOCATION_COMPLETED = 7; // origin: Engine
    INVOCATION_CANCELED = 8; // origin: User/Engine
}

// Workflow Model
message Workflow {
    ObjectMetadata metadata = 1;
    WorkflowSpec spec = 2;
    // TODO add internals
}

message WorkflowSpec {
    string name = 1;
    string version = 2;
}

// Function Invocation Model
message FunctionInvocation {
    ObjectMetadata metadata = 1;
    FunctionInvocationSpec spec = 2;
    FunctionInvocationStatus status = 3;
}

message FunctionInvocationSpec {
    string name = 1;
    string id = 2;
}

message FunctionInvocationStatus {
    enum Status {
        UNKNOWN = 0;
        SCHEDULED = 1; // Arrived at engine, but not yet schedu
        IN_PROGRESS = 2; // Scheduled
        SUCCEEDED = 3;
        FAILED = 4;
        ABORTED = 5;
        SKIPPED = 6;
    }
    Status status = 1;
    google.protobuf.Timestamp updatedAt = 2;
}


// Workflow Invocation Model
message WorkflowInvocationSpec {
    string workflowId = 1;
}

message WorkflowInvocationStatus {
    enum Status {
        UNKNOWN = 0;
        SCHEDULED = 1; // Arrived at engine, but not yet schedu
        IN_PROGRESS = 2; // Scheduled
        SUCCEEDED = 3;
        FAILED = 4;
        ABORTED = 5;
    }
    Status status = 1;
    google.protobuf.Timestamp updatedAt = 2;
    // TODO status nodes
}

message WorkflowInvocationContainer {
   ObjectMetadata metadata = 1;
    WorkflowInvocationSpec spec = 2;
    WorkflowInvocationStatus status = 3;
}
