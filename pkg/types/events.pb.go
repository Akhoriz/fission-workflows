// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/types/events.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	pkg/types/events.proto

It has these top-level messages:
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkflowEvent int32

const (
	WorkflowEvent_WORKFLOW_CREATED        WorkflowEvent = 0
	WorkflowEvent_WORKFLOW_UPDATED        WorkflowEvent = 1
	WorkflowEvent_WORKFLOW_PARSED         WorkflowEvent = 2
	WorkflowEvent_WORKFLOW_DELETED        WorkflowEvent = 3
	WorkflowEvent_WORKFLOW_PARSING_FAILED WorkflowEvent = 4
)

var WorkflowEvent_name = map[int32]string{
	0: "WORKFLOW_CREATED",
	1: "WORKFLOW_UPDATED",
	2: "WORKFLOW_PARSED",
	3: "WORKFLOW_DELETED",
	4: "WORKFLOW_PARSING_FAILED",
}
var WorkflowEvent_value = map[string]int32{
	"WORKFLOW_CREATED":        0,
	"WORKFLOW_UPDATED":        1,
	"WORKFLOW_PARSED":         2,
	"WORKFLOW_DELETED":        3,
	"WORKFLOW_PARSING_FAILED": 4,
}

func (x WorkflowEvent) String() string {
	return proto.EnumName(WorkflowEvent_name, int32(x))
}
func (WorkflowEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InvocationEvent int32

const (
	InvocationEvent_TASK_STARTED            InvocationEvent = 0
	InvocationEvent_TASK_SKIPPED            InvocationEvent = 1
	InvocationEvent_TASK_HEARTBEAT_REQUEST  InvocationEvent = 2
	InvocationEvent_TASK_HEARTBEAT_RESPONSE InvocationEvent = 3
	InvocationEvent_TASK_SUCCEEDED          InvocationEvent = 4
	InvocationEvent_TASK_FAILED             InvocationEvent = 5
	InvocationEvent_TASK_ABORTED            InvocationEvent = 6
	InvocationEvent_INVOCATION_CREATED      InvocationEvent = 7
	InvocationEvent_INVOCATION_COMPLETED    InvocationEvent = 8
	InvocationEvent_INVOCATION_CANCELED     InvocationEvent = 9
)

var InvocationEvent_name = map[int32]string{
	0: "TASK_STARTED",
	1: "TASK_SKIPPED",
	2: "TASK_HEARTBEAT_REQUEST",
	3: "TASK_HEARTBEAT_RESPONSE",
	4: "TASK_SUCCEEDED",
	5: "TASK_FAILED",
	6: "TASK_ABORTED",
	7: "INVOCATION_CREATED",
	8: "INVOCATION_COMPLETED",
	9: "INVOCATION_CANCELED",
}
var InvocationEvent_value = map[string]int32{
	"TASK_STARTED":            0,
	"TASK_SKIPPED":            1,
	"TASK_HEARTBEAT_REQUEST":  2,
	"TASK_HEARTBEAT_RESPONSE": 3,
	"TASK_SUCCEEDED":          4,
	"TASK_FAILED":             5,
	"TASK_ABORTED":            6,
	"INVOCATION_CREATED":      7,
	"INVOCATION_COMPLETED":    8,
	"INVOCATION_CANCELED":     9,
}

func (x InvocationEvent) String() string {
	return proto.EnumName(InvocationEvent_name, int32(x))
}
func (InvocationEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterEnum("WorkflowEvent", WorkflowEvent_name, WorkflowEvent_value)
	proto.RegisterEnum("InvocationEvent", InvocationEvent_name, InvocationEvent_value)
}

func init() { proto.RegisterFile("pkg/types/events.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xdf, 0x4e, 0xfa, 0x30,
	0x14, 0xc7, 0x7f, 0xc0, 0x0f, 0xd0, 0xe3, 0x1f, 0x9a, 0x42, 0xc0, 0xe8, 0x1b, 0x70, 0x21, 0x17,
	0x3e, 0x41, 0x59, 0x0f, 0xda, 0x80, 0x6b, 0x6d, 0x3b, 0x97, 0x78, 0xb3, 0xa8, 0x99, 0xc6, 0x60,
	0xd6, 0x05, 0x16, 0x8c, 0xd7, 0xbe, 0xb0, 0x8f, 0x60, 0xd6, 0x99, 0x85, 0xc5, 0xdb, 0xcf, 0xf9,
	0xe6, 0x7c, 0x3f, 0xed, 0x81, 0x71, 0xbe, 0x7e, 0x9d, 0x15, 0x9f, 0x79, 0xba, 0x9d, 0xa5, 0xbb,
	0x34, 0x2b, 0xb6, 0x97, 0xf9, 0xc6, 0x15, 0x6e, 0xfa, 0xd5, 0x82, 0x93, 0xd8, 0x6d, 0xd6, 0x2f,
	0xef, 0xee, 0x03, 0xcb, 0x01, 0x1d, 0x01, 0x89, 0xa5, 0x5e, 0x2e, 0x56, 0x32, 0x4e, 0x02, 0x8d,
	0xcc, 0x22, 0x27, 0xff, 0x1a, 0x34, 0x52, 0xdc, 0xd3, 0x16, 0x1d, 0xc2, 0xa0, 0xa6, 0x8a, 0x69,
	0x83, 0x9c, 0xb4, 0x1b, 0x51, 0x8e, 0x2b, 0x2c, 0xa3, 0x1d, 0x7a, 0x01, 0x93, 0x46, 0x54, 0x84,
	0xd7, 0xc9, 0x82, 0x89, 0x15, 0x72, 0xf2, 0x7f, 0xfa, 0xdd, 0x82, 0x81, 0xc8, 0x76, 0xee, 0xf9,
	0xb1, 0x78, 0x73, 0x59, 0xe5, 0x41, 0xe0, 0xd8, 0x32, 0xb3, 0x4c, 0x8c, 0x65, 0xba, 0x72, 0xa8,
	0xc9, 0x52, 0x28, 0xe5, 0xfb, 0xcf, 0x61, 0xec, 0xc9, 0x0d, 0x32, 0x6d, 0xe7, 0xc8, 0x6c, 0xa2,
	0xf1, 0x2e, 0x42, 0x63, 0x49, 0xbb, 0x2c, 0xfc, 0x33, 0x33, 0x4a, 0x86, 0x06, 0x49, 0x87, 0x52,
	0x38, 0xad, 0x56, 0x45, 0x41, 0x80, 0xc8, 0x4b, 0x09, 0x3a, 0x80, 0x23, 0xcf, 0x7e, 0xad, 0xba,
	0x75, 0x1f, 0x9b, 0x4b, 0x6f, 0xd0, 0xa3, 0x63, 0xa0, 0x22, 0xbc, 0x97, 0x01, 0xb3, 0x42, 0x86,
	0xf5, 0xef, 0xf4, 0xe9, 0x19, 0x8c, 0xf6, 0xb9, 0xbc, 0x55, 0xd5, 0xb3, 0x0f, 0xe8, 0x04, 0x86,
	0xfb, 0x13, 0x16, 0x06, 0x58, 0x2e, 0x3f, 0x9c, 0xf7, 0x1f, 0xba, 0xfe, 0x1c, 0x4f, 0x3d, 0x7f,
	0x88, 0xab, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x98, 0xf1, 0x99, 0xa2, 0x01, 0x00, 0x00,
}
