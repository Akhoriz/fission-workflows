package workflow_invocation_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fission/fission-workflows/cmd/wfcli/swagger-client/models"
)

// InvokeSyncReader is a Reader for the InvokeSync structure.
type InvokeSyncReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvokeSyncReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInvokeSyncOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInvokeSyncOK creates a InvokeSyncOK with default headers values
func NewInvokeSyncOK() *InvokeSyncOK {
	return &InvokeSyncOK{}
}

/*InvokeSyncOK handles this case with default header values.

InvokeSyncOK invoke sync o k
*/
type InvokeSyncOK struct {
	Payload *models.WorkflowInvocation
}

func (o *InvokeSyncOK) Error() string {
	return fmt.Sprintf("[POST /invocation/sync][%d] invokeSyncOK  %+v", 200, o.Payload)
}

func (o *InvokeSyncOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowInvocation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
