// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TaskInvocationSpec task invocation spec
// swagger:model TaskInvocationSpec
type TaskInvocationSpec struct {

	// Id of the task to be invoked (no ambiguatity at this point
	FnRef *FnRef `json:"fnRef,omitempty"`

	// inputs
	Inputs TaskInvocationSpecInputs `json:"inputs,omitempty"`

	// invocation Id
	InvocationID string `json:"invocationId,omitempty"`

	// TaskId is the id of the task within the workflow
	TaskID string `json:"taskId,omitempty"`
}

// Validate validates this task invocation spec
func (m *TaskInvocationSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFnRef(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskInvocationSpec) validateFnRef(formats strfmt.Registry) error {

	if swag.IsZero(m.FnRef) { // not required
		return nil
	}

	if m.FnRef != nil {

		if err := m.FnRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("fnRef")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskInvocationSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskInvocationSpec) UnmarshalBinary(b []byte) error {
	var res TaskInvocationSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
