// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// WorkflowInvocationStatusStatus workflow invocation status status
// swagger:model WorkflowInvocationStatusStatus
type WorkflowInvocationStatusStatus string

const (
	// WorkflowInvocationStatusStatusUNKNOWN captures enum value "UNKNOWN"
	WorkflowInvocationStatusStatusUNKNOWN WorkflowInvocationStatusStatus = "UNKNOWN"
	// WorkflowInvocationStatusStatusSCHEDULED captures enum value "SCHEDULED"
	WorkflowInvocationStatusStatusSCHEDULED WorkflowInvocationStatusStatus = "SCHEDULED"
	// WorkflowInvocationStatusStatusINPROGRESS captures enum value "IN_PROGRESS"
	WorkflowInvocationStatusStatusINPROGRESS WorkflowInvocationStatusStatus = "IN_PROGRESS"
	// WorkflowInvocationStatusStatusSUCCEEDED captures enum value "SUCCEEDED"
	WorkflowInvocationStatusStatusSUCCEEDED WorkflowInvocationStatusStatus = "SUCCEEDED"
	// WorkflowInvocationStatusStatusFAILED captures enum value "FAILED"
	WorkflowInvocationStatusStatusFAILED WorkflowInvocationStatusStatus = "FAILED"
	// WorkflowInvocationStatusStatusABORTED captures enum value "ABORTED"
	WorkflowInvocationStatusStatusABORTED WorkflowInvocationStatusStatus = "ABORTED"
)

// for schema
var workflowInvocationStatusStatusEnum []interface{}

func init() {
	var res []WorkflowInvocationStatusStatus
	if err := json.Unmarshal([]byte(`["UNKNOWN","SCHEDULED","IN_PROGRESS","SUCCEEDED","FAILED","ABORTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		workflowInvocationStatusStatusEnum = append(workflowInvocationStatusStatusEnum, v)
	}
}

func (m WorkflowInvocationStatusStatus) validateWorkflowInvocationStatusStatusEnum(path, location string, value WorkflowInvocationStatusStatus) error {
	if err := validate.Enum(path, location, value, workflowInvocationStatusStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this workflow invocation status status
func (m WorkflowInvocationStatusStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWorkflowInvocationStatusStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
