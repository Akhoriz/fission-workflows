// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// WorkflowStatusStatus - READY: PARSING = 1; // During validation/parsing
// swagger:model WorkflowStatusStatus
type WorkflowStatusStatus string

const (
	// WorkflowStatusStatusPENDING captures enum value "PENDING"
	WorkflowStatusStatusPENDING WorkflowStatusStatus = "PENDING"
	// WorkflowStatusStatusREADY captures enum value "READY"
	WorkflowStatusStatusREADY WorkflowStatusStatus = "READY"
	// WorkflowStatusStatusFAILED captures enum value "FAILED"
	WorkflowStatusStatusFAILED WorkflowStatusStatus = "FAILED"
	// WorkflowStatusStatusDELETED captures enum value "DELETED"
	WorkflowStatusStatusDELETED WorkflowStatusStatus = "DELETED"
)

// for schema
var workflowStatusStatusEnum []interface{}

func init() {
	var res []WorkflowStatusStatus
	if err := json.Unmarshal([]byte(`["PENDING","READY","FAILED","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		workflowStatusStatusEnum = append(workflowStatusStatusEnum, v)
	}
}

func (m WorkflowStatusStatus) validateWorkflowStatusStatusEnum(path, location string, value WorkflowStatusStatus) error {
	if err := validate.Enum(path, location, value, workflowStatusStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this workflow status status
func (m WorkflowStatusStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWorkflowStatusStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
