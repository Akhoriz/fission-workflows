{{ if .Values.apiserver }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: workflows-apiserver
  namespace: fission
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        svc: workflows-apiserver
    spec:
      containers:
      - name: workflows-apiserver
        image: {{ .Values.bundleImage }}
        imagePullPolicy: IfNotPresent
        command: ["/fission-workflows-bundle"]
        args: [
        # Only run apiserver components
          "--nats",
          "--api-http",
          "--api-workflow-invocation",
          "--api-workflow",
          "--api-admin",
        ]
        env:
        - name: ES_NATS_URL
#          value: nats://defaultFissionAuthToken@nats-streaming:4222
          value: nats://{{ .Values.nats.authToken }}@{{ .Values.nats.location }}
        - name: ES_NATS_CLUSTER
          value: "{{ .Values.nats.cluster }}"
        - name: FNENV_FISSION_POOLMGR
          value: "{{ .Values.fnenv.fission.poolmgr }}"
        - name: FNENV_FISSION_CONTROLLER
          value: "{{ .Values.fnenv.fission.controller }}"
---
apiVersion: v1
kind: Service
metadata:
  name: workflows-apiserver
  labels:
    svc: workflows-apiserver
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    svc: workflows-apiserver
---
{{ end }}
apiVersion: fission.io/v1
kind: Environment
metadata:
  name: workflow
  namespace: default
spec:
  version: 2
  runtime:
  # TODO Add environment variables for environment once supported by Fission
    image: "{{ .Values.envImage }}"
  allowedFunctionsPerContainer: infinite
