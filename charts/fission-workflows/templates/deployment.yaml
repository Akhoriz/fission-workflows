apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        svc: {{ .Values.service.name }}
        app: {{ .Values.name }}
    spec:
      containers:
        - name: workflows
          image: "{{ .Values.bundleImage }}:{{.Values.tag}}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["/fission-workflows-bundle"]
          args: [
            "--fission",                  # Enable the fission function runtime.
            "--internal",                 # Enable the internal function runtime (if, sleep, noop...).
            "--controller",               # Run the controllers, which process workflows and invocations.
            "--api-http",                 # Serve the APIs, besides as gRPC services, as HTTP REST services as well.
            "--api-workflow-invocation",  # Serve the invocation API (invoke, list...).
            "--api-workflow",             # Serve the workflow API (create, delete, list...).
            "--api-admin",                # Serve the admin API (status, version).
            "--metrics",                  # Collect and expose Prometheus metrics.
            "--test",                     # Ensure at the start that Fission is reachable.
            {{- if .Values.debug }}
            "--debug",                    # If set, significantly more debug information is stored and logged.
            {{- end }}
            {{- if eq .Values.eventstore.type "nats" }}
            "--nats",                     # If set, use NATS event store. If not set, in-memory will be used.
            {{- end }}
          ]
          env: # TODO add dedicated NATS cluster (instead of reusing the mqtrigger)
          {{- if eq .Values.eventstore.type "nats" }}
          - name: ES_NATS_URL
            value: "nats://{{ .Values.eventstore.nats.authToken }}@{{ .Values.eventstore.nats.location }}.{{ .Values.fission.ns }}:{{ .Values.eventstore.nats.port }}"
          - name: ES_NATS_CLUSTER
            value: "{{ .Values.eventstore.nats.cluster }}"
          {{- end}}
          - name: FNENV_FISSION_CONTROLLER
            value: "{{ .Values.fission.controller }}.{{ .Values.fission.ns }}"
          - name: FNENV_FISSION_EXECUTOR
            value: "{{ .Values.fission.executor }}.{{ .Values.fission.ns }}"
        - name: jaeger-agent
          image: jaegertracing/jaeger-agent
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
          args: [
            "--collector.host-port={{ .Values.jaeger.collector }}"
          ]
---
# Expose workflows as a service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    svc: {{ .Values.service.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  type: {{ .Values.service.type }}
  selector:
    svc: {{ .Values.service.name }}
  ports:
    - name: http
      port: {{ .Values.service.ports.http }}
      targetPort: 8080
      protocol: TCP
    - name: grpc
      port: {{ .Values.service.ports.grpc }}
      targetPort: 5555
      protocol: TCP